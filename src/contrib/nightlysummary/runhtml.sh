#!/bin/bash


if test $# -lt 2 ; then
  echo "Usage: $> runhtml.sh LOGDIR OUTFILE";
  echo " LOGDIR  ... Directory where to find the log files";
  echo " OUTFILE ... The output file where the HTML code will be written to";
  exit 0
fi

LOGDIR=$1
OUTFILE=$2

## Write HTML header

echo "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">" > $OUTFILE
echo "<html>" >> $OUTFILE
echo "<head><title>PETSc Test Summary</title>" >> $OUTFILE

## CSS beautification begin ##

echo "<style type=\"text/css\">" >> $OUTFILE
echo "div.main {" >> $OUTFILE
echo "  max-width: 800px;" >> $OUTFILE
echo "  background: white;" >> $OUTFILE
echo "  margin-left: auto;" >> $OUTFILE
echo "  margin-right: auto;" >> $OUTFILE
echo "  padding: 20px;" >> $OUTFILE
echo "  border: 5px solid #CCCCCC;" >> $OUTFILE
echo "  border-radius: 10px;" >> $OUTFILE
echo "  background: #FBFBFB;" >> $OUTFILE
echo "}" >> $OUTFILE

echo "table {" >> $OUTFILE
echo "  /*border: 1px solid black;" >> $OUTFILE
echo "  border-radius: 10px;*/" >> $OUTFILE
echo "  padding: 3px;" >> $OUTFILE
echo "}" >> $OUTFILE

echo "td a:link, td a:visited, td a:focus, td a:active {" >> $OUTFILE
echo "  font-weight: bold;" >> $OUTFILE
echo "  text-decoration: underline;" >> $OUTFILE
echo "  color: black;" >> $OUTFILE
echo "}" >> $OUTFILE

echo "td a:hover {" >> $OUTFILE
echo "  font-weight: bold;" >> $OUTFILE
echo "  text-decoration: underline;" >> $OUTFILE
echo "  color: black;" >> $OUTFILE
echo "}" >> $OUTFILE

echo "th {" >> $OUTFILE
echo "  padding: 10px;" >> $OUTFILE
echo "  font-size: 1.1em;" >> $OUTFILE
echo "  font-weight: bold;" >> $OUTFILE
echo "  text-align: center;" >> $OUTFILE
echo "}" >> $OUTFILE

echo "td.desc {" >> $OUTFILE
echo "  max-width: 650px;" >> $OUTFILE
echo "  padding: 2px;" >> $OUTFILE
echo "  font-size: 0.9em;" >> $OUTFILE
echo "}" >> $OUTFILE

echo "td.green {" >> $OUTFILE
echo "  text-align: center;" >> $OUTFILE
echo "  vertical-align: middle;" >> $OUTFILE
echo "  padding: 2px;" >> $OUTFILE
echo "  background: #01DF01;" >> $OUTFILE
echo "  min-width: 50px;" >> $OUTFILE
echo "}" >> $OUTFILE

echo "td.yellow {" >> $OUTFILE
echo "  text-align: center;" >> $OUTFILE
echo "  vertical-align: middle;" >> $OUTFILE
echo "  padding: 2px;" >> $OUTFILE
echo "  background: #F4FA58;" >> $OUTFILE
echo "  min-width: 50px;" >> $OUTFILE
echo "}" >> $OUTFILE

echo "td.red {" >> $OUTFILE
echo "  text-align: center;" >> $OUTFILE
echo "  vertical-align: middle;" >> $OUTFILE
echo "  padding: 2px;" >> $OUTFILE
echo "  background: #FE2E2E;" >> $OUTFILE
echo "  min-width: 50px;" >> $OUTFILE
echo "}" >> $OUTFILE
echo "</style>" >> $OUTFILE

## CSS beautification end ##

echo "</head>" >> $OUTFILE
echo "<body><div class=\"main\">" >> $OUTFILE
echo "<center>Last update: " >> $OUTFILE
date >> $OUTFILE
echo "</center>" >> $OUTFILE
echo "<h1>PETSc Test Summary</h1>" >> $OUTFILE
echo "<p>This page is an automated summary of the output generated by the Nightly logs. It provides a quick overview of the test results rather than trying to be a full-fledged testing solution.</p>" >> $OUTFILE

# Writes a full result table
# inputs:
#  $1 ... Table Title
#  $2 ... File prefix for log files
#
generate_section()
{
  echo "<h3>$1</h3>" >> $OUTFILE
  echo "<center><table>" >> $OUTFILE
  echo "<tr><th>Test</th><th>Warnings</th><th>Errors</th></tr>" >> $OUTFILE

  for f in `ls $LOGDIR/$2*.log`
  do
    echo "Processing file $f..."
    echo "<tr><td class=\"desc\">" >> $OUTFILE
    echo "<a href=\"${f#$LOGDIR/}\">${f#$LOGDIR/}</a>" >> $OUTFILE

    # Write number of warnings:
    numwarnings=`grep "[Ww]arning[: ]" $f | wc -l`
    if [ "$numwarnings" -gt "0" ]
    then
	  echo "</td><td class=\"yellow\">$numwarnings</td>" >> $OUTFILE
    else
	  echo "</td><td class=\"green\">$numwarnings</td>" >> $OUTFILE
    fi

    # Write number of errors:
    numerrors=`grep " [Kk]illed\| [Ff]atal[: ]\| [Ee][Rr][Rr][Oo][Rr][: ]" $f | wc -l`
    if [ "$numerrors" -gt "0" ]
    then
	  echo "</td><td class=\"red\">$numerrors</td></tr>" >> $OUTFILE
    else
	  echo "</td><td class=\"green\">$numerrors</td></tr>" >> $OUTFILE
    fi
  done
  echo "</table></center>" >> $OUTFILE
}



############ Part 1: Build ####################
#generate_section Configure configure  #Note: Current grep-driven extraction is not suitable for configure*.log files
generate_section Build     build
generate_section Examples  examples
generate_section Make      make


echo "</div></body></html>" >> $OUTFILE

